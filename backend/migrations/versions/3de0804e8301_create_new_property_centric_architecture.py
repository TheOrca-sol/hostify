"""Create new property-centric architecture

Revision ID: 3de0804e8301
Revises: 
Create Date: 2025-07-08 18:56:11.011327

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from sqlalchemy import Text

# revision identifiers, used by Alembic.
revision = '3de0804e8301'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.UUID(), server_default=sa.text('(gen_random_uuid())'), nullable=False),
    sa.Column('firebase_uid', sa.Text(), nullable=False),
    sa.Column('email', sa.Text(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('phone', sa.Text(), nullable=True),
    sa.Column('company_name', sa.Text(), nullable=True),
    sa.Column('settings', postgresql.JSON(astext_type=Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(now())'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('firebase_uid')
    )
    op.create_table('contract_templates',
    sa.Column('id', sa.UUID(), server_default=sa.text('(gen_random_uuid())'), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('template_content', sa.Text(), nullable=False),
    sa.Column('language', sa.Text(), nullable=False),
    sa.Column('legal_jurisdiction', sa.Text(), nullable=True),
    sa.Column('is_default', sa.Boolean(), server_default=sa.text('(false)'), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(now())'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('properties',
    sa.Column('id', sa.UUID(), server_default=sa.text('(gen_random_uuid())'), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('ical_url', sa.Text(), nullable=True),
    sa.Column('sync_frequency', sa.Integer(), nullable=False),
    sa.Column('contract_template_id', sa.UUID(), nullable=True),
    sa.Column('auto_verification', sa.Boolean(), server_default=sa.text('(true)'), nullable=True),
    sa.Column('auto_contract', sa.Boolean(), server_default=sa.text('(true)'), nullable=True),
    sa.Column('last_sync', sa.DateTime(timezone=True), nullable=True),
    sa.Column('settings', postgresql.JSON(astext_type=Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(now())'), nullable=True),
    sa.ForeignKeyConstraint(['contract_template_id'], ['contract_templates.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reservations',
    sa.Column('id', sa.UUID(), server_default=sa.text('(gen_random_uuid())'), nullable=False),
    sa.Column('property_id', sa.UUID(), nullable=False),
    sa.Column('external_id', sa.Text(), nullable=True),
    sa.Column('platform', sa.Text(), nullable=True),
    sa.Column('guest_name_partial', sa.Text(), nullable=True),
    sa.Column('phone_partial', sa.Text(), nullable=True),
    sa.Column('reservation_url', sa.Text(), nullable=True),
    sa.Column('check_in', sa.DateTime(timezone=True), nullable=False),
    sa.Column('check_out', sa.DateTime(timezone=True), nullable=False),
    sa.Column('status', sa.Text(), nullable=False),
    sa.Column('sync_source', sa.Text(), nullable=True),
    sa.Column('raw_data', postgresql.JSON(astext_type=Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(now())'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['property_id'], ['properties.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sync_logs',
    sa.Column('id', sa.UUID(), server_default=sa.text('(gen_random_uuid())'), nullable=False),
    sa.Column('property_id', sa.UUID(), nullable=False),
    sa.Column('sync_type', sa.Text(), nullable=False),
    sa.Column('status', sa.Text(), nullable=False),
    sa.Column('events_processed', sa.Integer(), nullable=False),
    sa.Column('errors', postgresql.JSON(astext_type=Text()), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), server_default=sa.text('(now())'), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['property_id'], ['properties.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('guests',
    sa.Column('id', sa.UUID(), server_default=sa.text('(gen_random_uuid())'), nullable=False),
    sa.Column('reservation_id', sa.UUID(), nullable=False),
    sa.Column('verification_token', sa.Text(), nullable=True),
    sa.Column('full_name', sa.Text(), nullable=True),
    sa.Column('cin_or_passport', sa.Text(), nullable=True),
    sa.Column('birthdate', sa.Date(), nullable=True),
    sa.Column('nationality', sa.Text(), nullable=True),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('phone', sa.Text(), nullable=True),
    sa.Column('email', sa.Text(), nullable=True),
    sa.Column('document_type', sa.Text(), nullable=True),
    sa.Column('id_document_path', sa.Text(), nullable=True),
    sa.Column('verification_status', sa.Text(), nullable=False),
    sa.Column('verified_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(now())'), nullable=True),
    sa.ForeignKeyConstraint(['reservation_id'], ['reservations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('contracts',
    sa.Column('id', sa.UUID(), server_default=sa.text('(gen_random_uuid())'), nullable=False),
    sa.Column('reservation_id', sa.UUID(), nullable=False),
    sa.Column('guest_id', sa.UUID(), nullable=False),
    sa.Column('template_id', sa.UUID(), nullable=False),
    sa.Column('generated_pdf_path', sa.Text(), nullable=True),
    sa.Column('signed_pdf_path', sa.Text(), nullable=True),
    sa.Column('signature_data', postgresql.JSON(astext_type=Text()), nullable=True),
    sa.Column('contract_status', sa.Text(), nullable=False),
    sa.Column('sent_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('signed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('signature_ip', sa.Text(), nullable=True),
    sa.Column('audit_trail', postgresql.JSON(astext_type=Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(now())'), nullable=True),
    sa.ForeignKeyConstraint(['guest_id'], ['guests.id'], ),
    sa.ForeignKeyConstraint(['reservation_id'], ['reservations.id'], ),
    sa.ForeignKeyConstraint(['template_id'], ['contract_templates.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('messages',
    sa.Column('id', sa.UUID(), server_default=sa.text('(gen_random_uuid())'), nullable=False),
    sa.Column('reservation_id', sa.UUID(), nullable=False),
    sa.Column('guest_id', sa.UUID(), nullable=True),
    sa.Column('message_type', sa.Text(), nullable=False),
    sa.Column('template_id', sa.Text(), nullable=True),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('channel', sa.Text(), nullable=False),
    sa.Column('sent_at', sa.DateTime(timezone=True), server_default=sa.text('(now())'), nullable=True),
    sa.Column('delivery_status', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['guest_id'], ['guests.id'], ),
    sa.ForeignKeyConstraint(['reservation_id'], ['reservations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('verification_links',
    sa.Column('id', sa.UUID(), server_default=sa.text('(gen_random_uuid())'), nullable=False),
    sa.Column('guest_id', sa.UUID(), nullable=False),
    sa.Column('token', sa.Text(), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('status', sa.Text(), nullable=False),
    sa.Column('contract_generated', sa.Boolean(), server_default=sa.text('(false)'), nullable=True),
    sa.Column('contract_sent', sa.Boolean(), server_default=sa.text('(false)'), nullable=True),
    sa.Column('contract_signed', sa.Boolean(), server_default=sa.text('(false)'), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(now())'), nullable=True),
    sa.Column('used_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['guest_id'], ['guests.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('token')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('verification_links')
    op.drop_table('messages')
    op.drop_table('contracts')
    op.drop_table('guests')
    op.drop_table('sync_logs')
    op.drop_table('reservations')
    op.drop_table('properties')
    op.drop_table('contract_templates')
    op.drop_table('users')
    # ### end Alembic commands ###
